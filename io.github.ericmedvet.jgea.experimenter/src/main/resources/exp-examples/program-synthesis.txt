$nEvals = [20000]

ea.experiment(
  runs = (randomGenerator = (seed = [1:1:2]) * [m.defaultRG()]) *
    (problem = (smoProblem = [
      ea.p.ps.synthetic(name = "iArraySum"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps]);
      ea.p.ps.synthetic(name = "vProduct"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps]);
      ea.p.ps.synthetic(name = "dIntSum"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps]);
      ea.p.ps.synthetic(name = "sLengther"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps]);
      ea.p.ps.synthetic(name = "biLongestString"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps]);
      ea.p.ps.synthetic(name = "triLongestString"; metrics = [avg_raw_dissimilarity; fail_rate; exception_error_rate; profile_avg_steps])
    ]) * [ea.p.smoToSubsettedSmo(objectives = [avg_raw_dissimilarity])]) *
    (solver = (nEval = $nEvals) * [
      ea.s.ttpnGp(iComparators = [ea.comparator.pAscending(of = ea.f.ttpnDeadGatesRate(of = ea.f.genotype()))])
    ]) * [
    ea.run()
  ];
  listeners = [
    ea.l.console(
      functions = [
        ea.f.size(of = ea.f.genotype(of = ea.f.best()); format = "%3d");
        ea.f.hist(of = f.each(of = ea.f.all(); mapF = ea.f.size(of = ea.f.genotype())));
        f.mapValue(key = fail_rate; of = ea.f.quality(of = ea.f.best()); format = "%5.3f");
        f.mapValue(key = exception_error_rate; of = ea.f.quality(of = ea.f.best()); format = "%5.3f");
        f.mapValue(key = avg_raw_dissimilarity; of = ea.f.quality(of = ea.f.best()); format = "%5.3f");
        ea.f.hist(of = f.each(of = ea.f.all(); mapF = f.mapValue(key = fail_rate; of = ea.f.quality())));
        f.min(of = f.each(of = ea.f.all(); mapF = ea.f.ttpnDeadGatesRate(of = ea.f.genotype())); format = "%5.2f");
        ea.f.hist(of = f.each(of = ea.f.all(); mapF = ea.f.ttpnDeadGatesRate(of = ea.f.genotype())))
      ];
      onlyLast = false
    );
    ea.l.savePlotForExp(
      path = "../../Documenti/experiments/{name}/{startTime}/best-fail_rate";
      plot = ea.plot.multi.quality(q = f.mapValue(key = fail_rate))
    );
    ea.l.savePlotForExp(
      path = "../../Documenti/experiments/{name}/{startTime}/best-avg_raw_dissimilarity";
      plot = ea.plot.multi.quality(q = f.mapValue(key = avg_raw_dissimilarity))
    );
    ea.l.savePlotForRun(
      path = "../../Documenti/experiments/{name}/{startTime}/objectives-{run.problem.name}-{run.solver.name}-{run.randomGenerator.seed:%03d}";
      plot = ea.plot.single.biObjectivePopulation(
        x = f.mapValue(key = avg_raw_dissimilarity; of = ea.f.quality());
        y = ea.f.ttpnDeadGatesRate(of = ea.f.genotype())
      );
      processor = ea.f.imagePlotter(secondary = true)
    );
    ea.l.savePlotForRun(
      path = "../../Documenti/experiments/{name}/{startTime}/profile-vs-dead-{run.problem.name}-{run.solver.name}-{run.randomGenerator.seed:%03d}";
      plot = ea.plot.single.biObjectivePopulation(
        x = f.mapValue(key = profile_avg_steps; of = ea.f.quality());
        y = ea.f.ttpnDeadGatesRate(of = ea.f.genotype())
      );
      processor = ea.f.imagePlotter(secondary = true)
    )
  ]
)